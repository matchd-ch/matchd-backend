apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/name: {{ template "matchd-backend.name" $ }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/version: {{ template "matchd-backend.version" $ }}
    app.matchd.ch/environment: {{ template "matchd-backend.environment" $ }}
    helm.sh/chart: {{ template "matchd-backend.chart" $ }}
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "matchd-backend.name" $ }}
        app.kubernetes.io/managed-by: {{ $.Release.Service }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/version: {{ template "matchd-backend.version" $ }}
        app.matchd.ch/environment: {{ template "matchd-backend.environment" $ }}
        helm.sh/chart: {{ template "matchd-backend.chart" $ }}
    spec:
      restartPolicy: Never
      imagePullSecrets:
      {{- if $.Values.image.secrets }}
{{ toYaml $.Values.image.secrets | indent 8 }}
      {{- end }}
      containers:
        - name: {{ $.Chart.Name }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command: ["echo", "success"]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: RESET_DB
              value: "{{ $.Values.migrate.resetDb }}"
            - name: SETUP_DB
              value: "true"
            {{- if $.Values.elasticsearch.enabled }}
            - name: ELASTIC_SEARCH_URL
              value: "http://{{ $.Values.elasticsearch.clusterName}}-{{ $.Values.elasticsearch.nodeGroup}}.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.elasticsearch.httpPort}}"
            {{- end }}
            {{- if $.Values.maildev.enabled }}
            - name: SMTP_HOST
              value: "{{ include "matchd-backend.fullname" $ }}-maildev-smtp.{{ $.Release.Namespace }}.svc.cluster.local"
            - name: SMTP_PORT
              value: "{{ $.Values.maildev.services.smtp.port }}"
            {{- end }}
            {{- range $key, $variable := $.Values.env -}}
            {{- if or (and (hasPrefix "ELASTIC_SEARCH_" $key) $.Values.elasticsearch.enabled) (and (hasPrefix "SMTP_" $key) $.Values.maildev.enabled) }}
            #  {{ $key }} has been skipped
            {{- else }}
            {{- $envKey := $key | upper | replace "." "_" | replace "-" "_" }}
            - name: {{ $envKey }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "matchd-backend.fullname" $ }}
                  key: {{ $envKey }}
            {{- end }}
            {{- end }}
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - name: media
              mountPath: /home/appuser/media
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: {{ include "matchd-backend.fullname" $ }}-media