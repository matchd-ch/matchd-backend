on:
  workflow_call:
    inputs:
      namespace:
        required: true
        type: string
      release:
        required: true
        type: string
      environment:
        required: true
        type: string
      regularReplicaCount:
        default: 1
        type: number
      stableReplicaCount:
        default: 0
        type: number
      version:
        default: "${{ github.sha }}"
        type: string
      domain:
        required: true
        type: string
      monitoringEnabled:
        type: boolean
        default: false
      autoscalingEnabled:
        type: boolean
        default: false
      task:
        type: string
        default: apply
      commentDeployment:
          type: boolean
          default: false
      dbName:
        type: string
        required: true
      dbHost:
        type: string
        required: true
      dbUser:
        type: string
        required: true
      csrfCookieDomain:
        type: string
        required: true
      senderEmail:
        type: string
        required: true
      emailSubjectPrefix:
        type: string
        default: ''
      emailSystemNotificationPrefix:
        type: string
        default: '[MATCHD SYSTEM NOTIFICATION]'
      managers:
        type: string
        default: 'webmaster_webmaster@matchd.ch'
      smtpRelay:
        type: string
        required: true
      smtpPort:
        type: number
        default: 2525
      frontendUrl:
        type: string
        required: true
      dataProtectionUrl:
        type: string
        required: true
      resetDb:
        type: boolean
        default: false
      maildevEnabled:
        type: boolean
        default: true
      sentryTracesSampleRate:
        type: number
        default: 0.5
      impersonationRedirectUriTemplate:
        type: string
        required: true
    secrets:
      DOCKER_PULL_USERNAME:
        required: true
      DOCKER_PULL_SECRET:
        required: true
      DB_PASSWORD:
        required: true
      SECRET_KEY:
        required: true
      SMTP_USER:
        required: true
      SMTP_PASSWORD:
        required: true
      SENTRY_DSN:
        required: true

name: "Deploy"

jobs:
  deploy_review:
    name: "Helm"

    permissions:
      contents: read
      id-token: write
      pull-requests: write

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: "Read .tool-versions"
        id: toolVersions
        run: |
          HELMFILE_VERSION="$(cat .tool-versions | grep "helmfile " | cut -d' ' -f2-)"
          echo "HELMFILE_VERSION=${HELMFILE_VERSION}" >> $GITHUB_ENV
          HELM_VERSION="$(cat .tool-versions | grep "helm " | cut -d' ' -f2-)"
          echo "HELM_VERSION=${HELM_VERSION}" >> $GITHUB_ENV
      - name: Setup helmfile
        uses: mamezou-tech/setup-helmfile@v2.0.0
        with:
          helmfile-version: "v${{ env.HELMFILE_VERSION }}"
          helm-version: "v${{ env.HELM_VERSION }}"
          install-kubectl: "no"

      - uses: google-github-actions/setup-gcloud@v1.1.1
        with:
          project_id: "joshmartin-cluster-next"

      - name: 'Prepare Helm Chart'
        run: helm dependency update .helm/chart/

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2.1.1'
        with:
          workload_identity_provider: 'projects/182803428686/locations/global/workloadIdentityPools/github/providers/github'
          service_account: 'matchd-deployer@joshmartin-cluster.iam.gserviceaccount.com'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v2.1.0'
        with:
          cluster_name: 'joshmartin-cluster-next'
          location: 'europe-west6-a'

      - name: 'Create Pull Secret'
        if: ${{ inputs.task != 'remove' }}
        run: |
          kubectl create secret --namespace="${{ inputs.namespace }}" \
            docker-registry \
            "${{ inputs.release }}-pull" \
            --docker-server="ghcr.io" \
            --docker-username="${{ secrets.DOCKER_PULL_USERNAME }}" \
            --docker-password="${{ secrets.DOCKER_PULL_SECRET }}" \
            --output=yaml \
            --dry-run=client \
            | kubectl \
              replace \
              --namespace="${{ inputs.namespace }}" \
              --force \
              --filename=-

      - name: 'Deploy'
        run: helmfile --file .helm/helmfile.yaml ${{ inputs.task }}
        env:
          VALUE_MONITORING_ENABLED: "${{ inputs.monitoringEnabled }}"
          VALUE_DOMAIN: "${{ inputs.domain }}"
          VALUE_IMAGE_REPOSITORY: "ghcr.io/${{ github.repository }}"
          VALUE_HELM_RELEASE_NAME: "${{ inputs.release }}"
          VALUE_ENVIRONMENT: "${{ inputs.environment }}"
          VALUE_STABLE_AUTOSCALING_ENABLED: "${{ inputs.autoscalingEnabled }}"
          VALUE_STABLE_REPLICA_COUNT: "${{ inputs.stableReplicaCount }}"
          VALUE_REGULAR_AUTOSCALING_ENABLED: "${{ inputs.autoscalingEnabled }}"
          VALUE_REGULAR_REPLICA_COUNT: "${{ inputs.regularReplicaCount }}"
          VALUE_HELM_RELEASE_VERSION: "${{ inputs.version }}"
          VALUE_KUBE_NAMESPACE: "${{ inputs.namespace }}"
          VALUE_KUBE_CONTEXT: "gke_joshmartin-cluster_europe-west6-a_joshmartin-cluster-next"
          VALUE_DJANGO_SETTINGS_MODULE: 'app.settings.base'
          VALUE_RESET_DB: '${{ inputs.resetDb }}'
          VALUE_DB_HOST: '${{ inputs.dbHost }}'
          VALUE_DB_PORT: '3306'
          VALUE_DB_USER: '${{ inputs.dbUser }}'
          VALUE_DB_PASSWORD: '${{ secrets.DB_PASSWORD }}'
          VALUE_DB_NAME: '${{ inputs.dbName }}'
          VALUE_MAILDEV_ENABLED: '${{ inputs.maildevEnabled }}'
          VALUE_EMAIL_SENDER: '${{ inputs.senderEmail }}'
          VALUE_SMTP_HOST: '${{ inputs.smtpRelay }}'
          VALUE_SMTP_PORT: '${{ inputs.smtpPort }}'
          VALUE_SMTP_HOST_PASSWORD: '${{ secrets.SMTP_PASSWORD }}'
          VALUE_SMTP_HOST_USER: '${{ secrets.SMTP_USER }}'
          VALUE_EMAIL_SUBJECT_PREFIX: '${{ inputs.emailSubjectPrefix }}'
          VALUE_EMAIL_SYSTEM_NOTIFICATION_PREFIX: '${{ inputs.emailSystemNotificationPrefix }}'
          VALUE_MANAGERS: '${{ inputs.managers }}'
          VALUE_DJANGO_BASE_URL: 'https://${{ inputs.domain }}'
          VALUE_GRAPHIQL_ENABLED: 'true'
          VALUE_FRONTEND_URL: '${{ inputs.frontendUrl }}'
          VALUE_APP_DOMAIN: '${{ inputs.domain }}'
          VALUE_APP_CSRF_COOKIE_DOMAIN: '${{ inputs.csrfCookieDomain }}'
          VALUE_WAGTAIL_SITE_NAME: 'MATCHD - ${{ inputs.environment }}'
          VALUE_WAGTAILADMIN_BASE_URL: 'https://${{ inputs.domain }}/admin'
          VALUE_SECRET_KEY: '${{ secrets.SECRET_KEY }}'
          VALUE_DATA_PROTECTION_URL: '${{ inputs.dataProtectionUrl }}'
          VALUE_SENTRY_ENABLED: 'true'
          VALUE_SENTRY_ENVIRONMENT: '${{ inputs.environment }}' 
          VALUE_SENTRY_RELEASE: '${{ inputs.version }}'
          VALUE_SENTRY_DSN: '${{ secrets.SENTRY_DSN }}'
          VALUE_SENTRY_TRACES_SAMPLE_RATE: '${{ inputs.sentryTracesSampleRate }}'
          VALUE_IMPERSONATION_REDIRECT_URI_TEMPLATE: '${{ inputs.impersonationRedirectUriTemplate }}'