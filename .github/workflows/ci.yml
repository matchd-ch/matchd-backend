on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

# Secrets:
# * CACHE_VERSION - Set to `date +%s`, set new when the cache should be busted

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DEFAULT_PYTHON_VERSION: 3.8.12

jobs:
  test:
    name: "Tests"

    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.3.22
        env:
          MYSQL_DATABASE: "matchd"
          MYSQL_USER: "matchd"
          MYSQL_PASSWORD: "matchd"
          MYSQL_ROOT_PASSWORD: "matchd"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=10
      elasticsearch:
        image: elasticsearch:7.16.1
        env:
          discovery.type: single-node
        options: >-
          --health-cmd "curl http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        ports:
        - 9200:9200

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "${{ env.DEFAULT_PYTHON_VERSION }}"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: pipenv-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            pipenv-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev

      - name: Run test suite
        run: |
          pipenv run test -svvv
        env:
          DJANGO_DB_HOST: '127.0.0.1'
          DJANGO_DB_PORT: '3306'
          DJANGO_DB_NAME: 'matchd'
          DJANGO_DB_USER: 'root'
          DJANGO_DB_PW: 'matchd'
          DJANGO_ELASTIC_SEARCH_URL: 'http://127.0.0.1:9200'
  
  lint:
    name: "Lint"

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "${{ env.DEFAULT_PYTHON_VERSION }}"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: pipenv-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            pipenv-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev

      - name: Run test suite
        run: |
          pipenv run lint

  automerge_dependabot:
    name: "Automerge Dependabot PRs"

    runs-on: ubuntu-latest

    needs: ['test', 'lint']

    permissions:
      pull-requests: write
      contents: write

    steps:
      - uses: fastify/github-action-merge-dependabot@v3.0.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Major Updates need to be merged manually
          target: minor
